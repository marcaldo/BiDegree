@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<div class="time">@_time</div>

@code {
    private string _time;
    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "./timers.js").AsTask();

    protected override async Task OnInitializedAsync()
    {
        var dotNetObjectReference = DotNetObjectReference.Create(this);

        var module = await Module;
        await module.InvokeVoidAsync("clock", dotNetObjectReference);
    }



    [JSInvokable]
    public void Timer_elapsed()
    {
        _time = DateTime.Now.ToLongTimeString();
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if(_module != null)
        {
            var module = await _module;
            await module.DisposeAsync();
        }
    }
}
