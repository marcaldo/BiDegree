@inject ISyncLocalStorageService LocalStorage
<div class="form-group">
    <label for="timeShowSelector">Clock's time format:</label>
    <select class="form-control" id="timeShowSelector" @bind="timeFormatSelection" @onfocus="()=>_saved=false">
        <option value="1">24 hs format</option>
        <option value="2">12 hs format (AM/PM)</option>
        <option value="0">Do not display the clock</option>
    </select>
    <div class="info"></div>
</div>
<div class="form-group">
    <div class="check-selection">
        <ToggleSwitch Id="showDate" OnToggle="ToggleSwitch" SetAsChecked="_isDateVisible" />
        <label for="showDate">Show the date</label>
    </div>
    <div class="save">
        <Icon Name="Icon.IconType.Ok" Visible="_saved" Size="25" Fill="limegreen" />
    </div>
</div>

@code {
    private bool _saved { get; set; } = false;
    private bool _isDateVisible = true;
    private TimeFormatType showDate = TimeFormatType.ShowDate;
    private TimeFormatType _timeFormatSelection;

    private byte timeFormatSelection
    {
        get => (byte)_timeFormatSelection;
        set
        {
            _timeFormatSelection = (TimeFormatType)value;
            SaveSettings();

        }
    }

    protected override void OnInitialized()
    {
        var timeDateFormatSelection = LocalStorage.GetItem<TimeFormatType?>(Constants.KeyName_TimeFormat) ?? TimeFormatType.T24hs;
        _timeFormatSelection = timeDateFormatSelection & ~TimeFormatType.ShowDate;
        _isDateVisible = timeDateFormatSelection.HasFlag(TimeFormatType.ShowDate);
    }

    private void ToggleSwitch()
    {
        _isDateVisible = !_isDateVisible;
        SaveSettings();
    }

    private void SaveSettings()
    {
        var timeDateFormatSelection = _isDateVisible
            ? _timeFormatSelection | TimeFormatType.ShowDate
            : _timeFormatSelection & ~TimeFormatType.ShowDate;

        LocalStorage.SetItem(Constants.KeyName_TimeFormat, timeDateFormatSelection);
        _saved = true;
    }

}
