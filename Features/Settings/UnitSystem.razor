@inject ILocalStorageService localStorage
<div class="form-group settings">
	<label for="tUnits">First show:</label>

	<div class="check-selection units-selector">
		<label>&#8451;</label>
		<ToggleSwitch Id="tUnits" OnToggle="((isCheckedUnits)=>SaveUnitsSelection(isCheckedUnits))" Class="unitsSelector" />
		<label>&#8457;</label>
	</div>

	<div class="check-selection">
		<ToggleSwitch Id="useBothTemps" OnToggle="((isCheckedBothTemps)=>SaveShowBothTemsSelection(isCheckedBothTemps))" />
		<label for="useBothTemps">Show both Fahrenheit and Celsius.</label>
	</div>

</div>
@code {
	private bool isCheckedUnits;
	private bool isCheckedBothTemps { get; set; } = true;

	protected override async Task OnInitializedAsync()
	{
		var units = await localStorage.GetItemAsync<UnitsType?>(Constants.KeyName_Units);
		var showBothTemps = await localStorage.GetItemAsync<bool?>(Constants.KeyName_ShowBothTemps);

		if (units is null) { units = UnitsType.Metric; }
		if (showBothTemps is null) { showBothTemps = true; }

		isCheckedUnits = units == UnitsType.Imperial;
		isCheckedBothTemps = (bool)showBothTemps;
	}

	protected async Task SaveUnitsSelection(bool isChecked)
	{
		UnitsType units = isChecked ? UnitsType.Imperial : UnitsType.Metric;
		await localStorage.SetItemAsync(Constants.KeyName_Units, units);
	}

	protected async Task SaveShowBothTemsSelection(bool isChecked)
	{
		await localStorage.SetItemAsync(Constants.KeyName_ShowBothTemps, isChecked);
	}
}
