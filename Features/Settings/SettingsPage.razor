@page "/settings"
@inject NavigationManager NavManager
@inject ISyncLocalStorageService LocalStorage

<h3>Settings</h3>
<ul class="settings-group">
    <li><UnitSystem /></li>
    <li><RefreshTimer /></li>
    <li><CitySelection /></li>
    <li><TimeFormat /></li>
    <li><PhotoFrameShowTime /></li>
    <li><StartPage /></li>
    <li><ApiKey /></li>
    <li><DriveApiKey /></li>

    <li class="about">
        <h4>BiDegree</h4>
        <p>2021</p>
        <p></p>
    </li>
</ul>

@code {
    private bool showApiKey = false;
    private string openWeatherApi;
    private string driveApi;
    private string driveFolder;
    private string defaultStartPage;
    private int elapsedSlideShow;
    private int weatherRefreshTime;

    protected override void OnInitialized()
    {
        SetSettingsFromQueryString();
    }

    private void SetSettingsFromQueryString()
    {
        NavManager.TryGetQueryString<string>(Constants.KeyApiKey, out openWeatherApi);
        NavManager.TryGetQueryString<string>(Constants.DriveKeyApiKey, out driveApi);
        NavManager.TryGetQueryString<string>(Constants.DriveFolderId, out driveFolder);
        NavManager.TryGetQueryString<string>(Constants.StartPage, out defaultStartPage);
        NavManager.TryGetQueryString<int>(Constants.ShowTime, out elapsedSlideShow);
        NavManager.TryGetQueryString<int>(Constants.RefreshTime, out weatherRefreshTime);

        if (!string.IsNullOrEmpty(openWeatherApi)) { LocalStorage.SetItem(Constants.KeyApiKey, openWeatherApi); }
        if (!string.IsNullOrEmpty(driveApi)) { LocalStorage.SetItem(Constants.DriveKeyApiKey, driveApi); }
        if (!string.IsNullOrEmpty(driveFolder)) { LocalStorage.SetItem(Constants.DriveFolderId, driveFolder); }
        if (elapsedSlideShow > 0) { LocalStorage.SetItem(Constants.ShowTime, elapsedSlideShow); }
        if (weatherRefreshTime > 0) { LocalStorage.SetItem(Constants.RefreshTime, weatherRefreshTime); }

        if (!string.IsNullOrEmpty(defaultStartPage))
        {
            LocalStorage.SetItem(Constants.StartPage, defaultStartPage);
            NavManager.NavigateTo(defaultStartPage);
        }
    }

}
