@page "/scale"
@page "/scale/{temp}"
@using Blazored.LocalStorage
@inject ISyncLocalStorageService LocalStorage

<div class="templist">
    @for (float t = maxT; t >= minT; t = t - pitch)
    {
        var tubeFill = ValuesDisplay.TubeFillType.Empty;
        if (t == selectedTemp) tubeFill = ValuesDisplay.TubeFillType.IsValue;
        if (t < selectedTemp) tubeFill = ValuesDisplay.TubeFillType.Fill;

        <ValuesDisplay Value="@t" Units="@Units" TubeFill="@tubeFill" />
    }
</div>
<div class="converter">
    <input class="form-control" type="number" id="celsius" />
    <div class="bulb"></div>
    <input class="form-control" type="number" id="fahrenheit" />
    <button class="btn btn-link" onclick="document.getElementById('theTemp').scrollIntoView({behavior:'smooth'})">Star Wars</button>
</div>

@code{
    [Parameter] public string temp { get; set; }

    const float pitch = 1.0f;
    private UnitsType Units;

    private float selectedTemp;
    private float displayOffsetTemp;
    private float minT;
    private float maxT;

    protected override void OnInitialized()
    {
        Units = LocalStorage.GetItem<UnitsType?>(Constants.KeyUnits) ?? UnitsType.Metric;

        if(!float.TryParse(temp, out selectedTemp))
        {
            selectedTemp = Units == UnitsType.Metric ? 0 : 32;  // 0°C = 32°F
        }


        minT = selectedTemp - 100;
        maxT = selectedTemp + 100;


        Console.WriteLine(selectedTemp);

    }

}