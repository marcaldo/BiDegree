@inject NavigationManager NavManager
@inject IConfiguration Configuration
@inject ISyncLocalStorageService LocalStorage

@code {
    private string openWeatherApi;
    private string DriveApi;
    private string DriveFolder;

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.BaseUri);

        if (!SetSettingsFromQueryString())
        {
            var apiKey = LocalStorage.GetItem<string>(Constants.KeyApiKey);

            if (string.IsNullOrEmpty(apiKey))
            {
                var configApiKey = Configuration.GetValue<string>("OpenWeather:ApiKey");

                if (string.IsNullOrEmpty(configApiKey))
                {
                    NavManager.NavigateTo($"{uri}/settings");
                }

                LocalStorage.SetItem<string>(Constants.KeyApiKey, configApiKey);
            }
        }

        var startPage = LocalStorage.GetItem<string>(Constants.StartPage) is null
        ? Constants.DefaultStartingPage
        : LocalStorage.GetItem<string>(Constants.StartPage);

        NavManager.NavigateTo($"{uri}/{startPage}");
    }

    private bool SetSettingsFromQueryString()
    {
        NavManager.TryGetQueryString<string>(Constants.KeyApiKey, out openWeatherApi);
        NavManager.TryGetQueryString<string>(Constants.DriveKeyApiKey, out DriveApi);
        NavManager.TryGetQueryString<string>(Constants.DriveFolderId, out DriveFolder);

        if (string.IsNullOrEmpty(openWeatherApi)
                || string.IsNullOrEmpty(DriveApi)
                || string.IsNullOrEmpty(DriveFolder))
        {
            return false;
        }

        Console.WriteLine(openWeatherApi);
        Console.WriteLine(DriveApi);
        Console.WriteLine(DriveFolder);

        LocalStorage.SetItem(Constants.KeyApiKey, openWeatherApi);
        LocalStorage.SetItem(Constants.DriveKeyApiKey, DriveApi);
        LocalStorage.SetItem(Constants.DriveFolderId, DriveFolder);

        return true;
    }

}

